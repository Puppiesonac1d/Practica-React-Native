{"ast":null,"code":"var _jsxFileName = \"/Users/diego/Desktop/React-Native/01-reforzamiento/src/typescript/TiposBasicos.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TiposBasicos = () => {\n  //Se declara la variable nombre y también se puede establecer que la variable pueda ser o no de tipo string o número\n  let nombre = 'Diego'; //Las constantes no pueden variar\n\n  const edad = 24; //booleanos\n\n  let estaActivo = true; //arreglo con elementos adentro\n\n  const poderes = ['Depresión', 'Mucho pelo']; //arreglo sin elementos, en este caso se le insertará cualquier tipo de variables o valores\n\n  const poderes2 = [];\n  poderes2.push('Poder 1');\n  poderes2.push('Poder 2');\n  poderes2.push(1234);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Tipos b\\xE1sicos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), nombre, \", \", edad, \", \", estaActivo ? 'activo' : 'no activo', \",\", poderes.join(', ')]\n  }, void 0, true);\n};\n_c = TiposBasicos;\n\nvar _c;\n\n$RefreshReg$(_c, \"TiposBasicos\");","map":{"version":3,"sources":["/Users/diego/Desktop/React-Native/01-reforzamiento/src/typescript/TiposBasicos.tsx"],"names":["TiposBasicos","nombre","edad","estaActivo","poderes","poderes2","push","join"],"mappings":";;;AACA,OAAO,MAAMA,YAAY,GAAG,MAAM;AAE9B;AACA,MAAIC,MAAuB,GAAG,OAA9B,CAH8B,CAI9B;;AACA,QAAMC,IAAI,GAAG,EAAb,CAL8B,CAM9B;;AACA,MAAIC,UAAmB,GAAG,IAA1B,CAP8B,CAQ9B;;AACA,QAAMC,OAAO,GAAG,CAAC,WAAD,EAAc,YAAd,CAAhB,CAT8B,CAU9B;;AACA,QAAMC,QAAQ,GAAG,EAAjB;AACAA,EAAAA,QAAQ,CAACC,IAAT,CAAc,SAAd;AACAD,EAAAA,QAAQ,CAACC,IAAT,CAAc,SAAd;AACAD,EAAAA,QAAQ,CAACC,IAAT,CAAc,IAAd;AAEA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKL,MAFL,QAEeC,IAFf,QAEwBC,UAAD,GAAe,QAAf,GAA0B,WAFjD,OAE+DC,OAAO,CAACG,IAAR,CAAa,IAAb,CAF/D;AAAA,kBADJ;AAMH,CAtBM;KAAMP,Y","sourcesContent":["\nexport const TiposBasicos = () => {\n\n    //Se declara la variable nombre y también se puede establecer que la variable pueda ser o no de tipo string o número\n    let nombre: string | number = 'Diego';\n    //Las constantes no pueden variar\n    const edad = 24;\n    //booleanos\n    let estaActivo: boolean = true;\n    //arreglo con elementos adentro\n    const poderes = ['Depresión', 'Mucho pelo'];\n    //arreglo sin elementos, en este caso se le insertará cualquier tipo de variables o valores\n    const poderes2 = [];\n    poderes2.push('Poder 1');\n    poderes2.push('Poder 2');\n    poderes2.push(1234);\n    \n    return (\n        <>\n            <h3>Tipos básicos</h3>\n            {nombre}, {edad}, {(estaActivo) ? 'activo' : 'no activo'},{poderes.join(', ')}\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}
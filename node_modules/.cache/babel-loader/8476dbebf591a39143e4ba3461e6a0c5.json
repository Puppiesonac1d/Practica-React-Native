{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState, useRef } from 'react';\nimport { reqResApi } from '../api/reqRes';\nexport const useUsuarios = () => {\n  _s();\n\n  //Colección de todos los usuarios\n  const [usuarios, setUsuarios] = useState([]); //Crear use state para la compaginación\n\n  const paginaRef = useRef(1); //Cargar inicialmente el método de usuariosNext para mostrar la vista por defecto\n\n  useEffect(() => {\n    cargarUsuarios();\n  }, []);\n\n  const cargarUsuarios = async () => {\n    //llamado de API\n    const resp = await reqResApi.get('/users', {\n      //Referencias al valor de el n° de la página actual\n      params: {\n        //La api usa el parámetro page para saber en que página está, aquí se declara ese valor como el actual, en caso de que se sume o se quite\n        page: paginaRef.current\n      }\n    });\n\n    if (resp.data.data.length > 0) {\n      setUsuarios(resp.data.data);\n    } else {\n      alert('No hay mas registros');\n    }\n  };\n\n  const paginaSiguiente = () => {\n    cargarUsuarios();\n    paginaRef.current++;\n  };\n\n  const paginaAnterior = () => {\n    cargarUsuarios();\n    paginaRef.current--;\n  };\n\n  return {\n    usuarios,\n    paginaSiguiente,\n    paginaAnterior\n  };\n};\n\n_s(useUsuarios, \"sTfXYdnExaGTy7tq5g2mbBa9Y4w=\");","map":{"version":3,"sources":["/Users/diego/Desktop/React-Native/01-reforzamiento/src/hooks/useUsuarios.tsx"],"names":["useEffect","useState","useRef","reqResApi","useUsuarios","usuarios","setUsuarios","paginaRef","cargarUsuarios","resp","get","params","page","current","data","length","alert","paginaSiguiente","paginaAnterior"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,SAASC,SAAT,QAA0B,eAA1B;AAIA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC7B;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAY,EAAZ,CAAxC,CAF6B,CAI7B;;AACA,QAAMM,SAAS,GAAGL,MAAM,CAAC,CAAD,CAAxB,CAL6B,CAO7B;;AACAF,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,cAAc;AACjB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,cAAc,GAAG,YAAY;AAC/B;AACA,UAAMC,IAAI,GAAG,MAAMN,SAAS,CAACO,GAAV,CAA6B,QAA7B,EAAuC;AACtD;AACAC,MAAAA,MAAM,EAAE;AACJ;AACAC,QAAAA,IAAI,EAAEL,SAAS,CAACM;AAFZ;AAF8C,KAAvC,CAAnB;;AAQA,QAAIJ,IAAI,CAACK,IAAL,CAAUA,IAAV,CAAeC,MAAf,GAAwB,CAA5B,EAA+B;AAC3BT,MAAAA,WAAW,CAACG,IAAI,CAACK,IAAL,CAAUA,IAAX,CAAX;AACH,KAFD,MAEO;AACHE,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACH;AACJ,GAfD;;AAiBA,QAAMC,eAAe,GAAG,MAAM;AAC1BT,IAAAA,cAAc;AACdD,IAAAA,SAAS,CAACM,OAAV;AACH,GAHD;;AAKA,QAAMK,cAAc,GAAG,MAAM;AACzBV,IAAAA,cAAc;AACdD,IAAAA,SAAS,CAACM,OAAV;AACH,GAHD;;AAKA,SAAO;AACHR,IAAAA,QADG;AAEHY,IAAAA,eAFG;AAGHC,IAAAA;AAHG,GAAP;AAKH,CA5CM;;GAAMd,W","sourcesContent":["import { useEffect, useState, useRef } from 'react';\nimport { reqResApi } from '../api/reqRes';\nimport { ReqResListado, Usuario } from '../interfaces/reqRes';\n\n\nexport const useUsuarios = () => {\n    //Colección de todos los usuarios\n    const [usuarios, setUsuarios] = useState<Usuario[]>([]);\n\n    //Crear use state para la compaginación\n    const paginaRef = useRef(1);\n\n    //Cargar inicialmente el método de usuariosNext para mostrar la vista por defecto\n    useEffect(() => {\n        cargarUsuarios();\n    }, [])\n\n    const cargarUsuarios = async () => {\n        //llamado de API\n        const resp = await reqResApi.get<ReqResListado>('/users', {\n            //Referencias al valor de el n° de la página actual\n            params: {\n                //La api usa el parámetro page para saber en que página está, aquí se declara ese valor como el actual, en caso de que se sume o se quite\n                page: paginaRef.current\n            }\n        });\n\n        if (resp.data.data.length > 0) {\n            setUsuarios(resp.data.data);\n        } else {\n            alert('No hay mas registros');\n        }\n    }\n\n    const paginaSiguiente = () => {\n        cargarUsuarios();\n        paginaRef.current++;\n    }\n\n    const paginaAnterior = () => {\n        cargarUsuarios();\n        paginaRef.current--;\n    }\n\n    return {\n        usuarios,\n        paginaSiguiente,\n        paginaAnterior,\n    }\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}